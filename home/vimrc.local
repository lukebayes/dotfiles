" set nocursorline " don't highlight current line

" keyboard shortcuts
inoremap jj <ESC>


" highlight search
set hlsearch

"nmap <leader>hl :let @/ = ""<CR>

" Disambiguate ,a & ,t from the Align plugin, making them fast again.
"
" This section is here to prevent AlignMaps from adding a bunch of mappings
" that interfere with the very-common ,a and ,t mappings. This will get run
" at every startup to remove the AlignMaps for the *next* vim startup.
"
" If you do want the AlignMaps mappings, remove this section, remove
" ~/.vim/bundle/Align, and re-run rake in maximum-awesome.
"function! s:RemoveConflictingAlignMaps()
  "if exists("g:loaded_AlignMapsPlugin")
    "AlignMapsClean
  "endif
"endfunction
"command! -nargs=0 RemoveConflictingAlignMaps call s:RemoveConflictingAlignMaps()
"silent! autocmd VimEnter * RemoveConflictingAlignMaps

syntax enable
"colorscheme solarized
set background=dark

map m :tabn<CR>
map M :tabp<CR>

let g:vim_json_syntax_conceal = 0
let g:NERDTreeMapMenu='B'

" let $JS_CMD='node'
" hi clear SpellBad

" hi Search cterm=NONE ctermfg=Black ctermbg=Yellow
" hi Visual cterm=NONE ctermfg=Black ctermbg=Yellow
" hi MatchParen cterm=none ctermbg=green ctermfg=black
" hi CursorLine cterm=none ctermbg=Black
hi CursorLine cterm=NONE ctermbg=236 ctermfg=NONE
hi Search ctermbg=yellow ctermfg=black
hi VertSplit ctermbg=236 ctermfg=236
hi Todo term=standout ctermbg=NONE ctermfg=NONE
hi Constant ctermfg=12
hi Visual ctermbg=4 ctermfg=white
hi SpellBad cterm=underline ctermfg=NONE ctermbg=NONE

augroup CursorLine
  au!
  au VimEnter * setlocal cursorline
  au WinEnter * setlocal cursorline
  au BufWinEnter * setlocal cursorline
  au WinLeave * setlocal nocursorline
augroup END

" hi SpellBad cterm=bold ctermfg=7 ctermbg=3 guibg=LightYellow
" au InsertLeave * hi Cursor ctermbg=red
" au InsertEnter * hi Cursor ctermbg=green

" let g:syntastic_javascript_jshint_args='--config
" /Users/lukebayes/Projects/Krypton/experimental/.jshintrc'
" let g:syntastic_javascript_checkers = ['jshint']
" let jshint_read = 1

" Delete trailing whitespace on save
autocmd BufWritePre *.js :%s/\s\+$//e

" Configure Powerline
" set rtp+=$HOME/.local/lib/python2.7/site-packages/powerline/bindings/vim/
" set rtp+=$HOME/Library/Python/2.7/lib/python/site-packages/powerline/bindings/vim
set rtp+=/Library/Python/2.7/site-packages/powerline/bindings/vim/

" Always show statusline
set laststatus=2

let g:solarized_termcolors=256

" Use 256 colours (Use this setting only if your terminal supports 256 colours)
set t_Co=256

" Ignore Powerline characters
" let g:syntastic_python_flake8_args = '--ignore=W191,E501,E128,W291,E126,E101'
" let b:syntastic_checkers = ['flake8']
" unlet! g:python_space_error_highlight
" let g:pymode_syntax_indent_errors = 0
" let g:pymode_syntax_space_errors = 0

" set tabline=tabber#TabLine()

set nowrap

" let g:ctrlp_custom_ignore = 'node_modules|server\/static|DS_Store|git|third_party|iojs|ios|build'
" set wildignore+=*/node_modules/*,*/third_party/*,*/iojs
" let g:ctrlp_custom_ignore = '\v[\/](\.git|\.hg|third_party/*|node_modules/*|\.settings|\.sass-cache|cache|\.rsync_cache|vendor/([^\/]+\/)*vendor)$'
" Filter the ctrl p output using the system gitignore
" let g:ctrlp_user_command = 'grep -v "`cat $HOME/.gitignore`" -r %s -n'

