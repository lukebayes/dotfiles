# Path to your oh-my-zsh installation.
export ZSH="/home/lukebayes/.oh-my-zsh"

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
# ZSH_THEME="robbyrussell"
ZSH_THEME="agnoster"

# Ensure history is preserved
HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
setopt appendhistory

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(ssh-agent git)

source $ZSH/oh-my-zsh.sh

# User configuration
export JAVA_CLASSPATH="$HOME/javalib/clojure-1.8.0"

export PATH="$HOME/bin:$PATH"
# export PATH="$PATH:/Users/lukebayes/bin"
# export PATH="$PATH:/Volumes/Deep Storage 01/SDK/platform-tools"
# export PATH="$PATH:/Applications/Racket v6.12/bin"
# export PATH="$PATH:$HOME/.npm-global/bin"
export PATH="$PATH:$HOME/.local/bin"
export PATH="$PATH:$HOME/local/cmake/bin"
export PATH="$PATH:$HOME/src/eagle-9.6.2"
export PATH="$PATH:/Library/Frameworks/Python.framework/Versions/2.7/bin"
export PATH="$PATH:/bin"
export PATH="$PATH:/opt/X11/bin"
export PATH="$PATH:/sbin"
export PATH="$PATH:/usr/bin"
export PATH="$PATH:/usr/local/bin"
export PATH="$PATH:/usr/local/go/bin"
export PATH="$PATH:/usr/sbin"
# Google build tools
export PATH="$HOME/depot_tools:$PATH"
# YouTube Cobalt clang and build tools
export PATH="$HOME/Projects/foss/cobalt/src/third_party/llvm-build/Release+Asserts/bin:$PATH"
# Nodejs
export PATH="$HOME/Projects/foss/node/node-v12.18.2-linux-x64/bin:$PATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.

# Turn OFF the muthereffing System Bell
xset b off
xset b 0 0 0

# Add the github rsa key if it's not already added
# ssh-add -l | grep github > /dev/null 2>&1
# github_rsa_added=$?
# Add the expected ssh identities to the running ssh-agent
# if [ $github_rsa_added != 0 ]; then
  # ssh-add $HOME/.ssh/github_rsa
# fi

# Add the beefcake rsa key if it's not already added
# ssh-add -l | grep beefcake > /dev/null 2>&1
# beefcake_rsa_added=$?
# Add the expected ssh identities to the running ssh-agent
# if [ $beefcake_rsa_added != 0 ]; then
  # ssh-add $HOME/.ssh/beefcake_rsa
# fi

